optimizer : {
  type: AdamW,
  kwargs: {
  lr : 0.0016,
  weight_decay : 0.0005
}}

scheduler: {
  type: LambdaLR,
  kwargs: {
  warmup_epoch: 20, 
  decay_step: 100,
  lr_decay: 0.2,
  lowest_decay: 0.004  # min lr = lowest_decay * lr
}}
bnmscheduler: {
  type: Lambda,
  kwargs: {
  decay_step: 21,
  bn_decay: 0.5,
  bn_momentum: 0.9,
  lowest_decay: 0.01
}}

dataset : {
  train : { _base_: cfgs/dataset_configs/PCN.yaml, 
            others: {subset: 'train'}},
  val : { _base_: cfgs/dataset_configs/PCN.yaml, 
            others: {subset: 'test'}},
  test : { _base_: cfgs/dataset_configs/PCN.yaml, 
            others: {subset: 'test'}}}
            
model : {
  NAME: EINet, num_pred: 16384, num_seeds: 512, dim_seed_fea: 128, dim_feat: 512, upscales: [1,2,8], scales: [0.4,0.3,0.2]}

loss : {
  sparse_loss_weight: 1.0,
  dense_loss_weight: 1.0,
}
total_bs : 64
step_per_update : 1
max_epoch : 350

consider_metric: CDL1
